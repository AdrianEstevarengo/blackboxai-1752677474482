// <auto-generated />
using System;
using Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infra.Migrations
{
    [DbContext(typeof(AgendaDbContext))]
    [Migration("20250604171801_AtualizandoBanco")]
    partial class AtualizandoBanco
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("AgendaConsulta")
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Anexo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("ArquivoByte")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<Guid>("AtividadeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataUpload")
                        .HasColumnType("datetime2");

                    b.Property<string>("NomeArquivo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoArquivo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AtividadeId");

                    b.ToTable("Anexo", "AgendaConsulta");
                });

            modelBuilder.Entity("Domain.Entities.Atividade", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataEntrada")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataPrevisao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataPrevisaoAssinatura")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataPrevisaoEmissao")
                        .HasColumnType("datetime2");

                    b.Property<string>("ElementoDespesa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EnfrentamentoCOVID")
                        .HasColumnType("bit");

                    b.Property<bool>("EstaNaMesa")
                        .HasColumnType("bit");

                    b.Property<string>("FusoHorarioAbertura")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IRP")
                        .HasColumnType("bit");

                    b.Property<string>("IdPNCP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdPrioridade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Justificativa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Legislacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Localizacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ManifestacaoInteresse")
                        .HasColumnType("bit");

                    b.Property<string>("Mesa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Modalidade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotivoPrioridade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotivoRevogacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NIRP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NaturezaDoObjeto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroCertame")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NumeroItem")
                        .HasColumnType("int");

                    b.Property<string>("NumeroProcesso")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Objeto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Prioridade")
                        .HasColumnType("bit");

                    b.Property<string>("Situacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubObjeto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UnidadeGestoraId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UnidadeGestoraId");

                    b.ToTable("Atividade", "AgendaConsulta");
                });

            modelBuilder.Entity("Domain.Entities.Evento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AtividadeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataFinal")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataInicial")
                        .HasColumnType("datetime2");

                    b.Property<string>("Localizacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ProcessoAgendaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Setorial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoEventoId")
                        .HasColumnType("int");

                    b.Property<string>("UnidadeExterna")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AtividadeId");

                    b.HasIndex("ProcessoAgendaId");

                    b.HasIndex("TipoEventoId");

                    b.ToTable("Evento", "AgendaConsulta");
                });

            modelBuilder.Entity("Domain.Entities.Itemsatacollections", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("DesempateRegional")
                        .HasColumnType("bit");

                    b.Property<string>("EmpresaVencedora")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("MeEpp")
                        .HasColumnType("bit");

                    b.Property<int>("OrdemDoItem")
                        .HasColumnType("int");

                    b.Property<bool?>("PossuiCota")
                        .HasColumnType("bit");

                    b.Property<string>("Quantidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("RecursoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RelatorioEstatisticoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Situacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ValorEstimado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ValorNegociado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ro")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("RelatorioEstatisticoId");

                    b.ToTable("Itemsatacollections", "AgendaConsulta");
                });

            modelBuilder.Entity("Domain.Entities.ProcessoAgenda", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataConclusaoExterna")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataConclusaoInterna")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataPrevisao")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdPrioridade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotivoPrioridade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroProcesso")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Objeto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Prioridade")
                        .HasColumnType("bit");

                    b.Property<string>("Situacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Temas")
                        .HasColumnType("int");

                    b.Property<int>("UnidadeGestoraId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ProcessosAgenda", "AgendaConsulta");
                });

            modelBuilder.Entity("Domain.Entities.Recurso", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DataJulgamentoRecurso")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DataRecurso")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ItemsatacollectionsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NumItemRecurso")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SituacaoJulgamento")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ItemsatacollectionsId");

                    b.ToTable("Recurso", "AgendaConsulta");
                });

            modelBuilder.Entity("Domain.Entities.RelatorioEstatistico", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Ano")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("AtividadeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCriacaoRelatorio")
                        .HasColumnType("datetime2");

                    b.Property<string>("ElaboradoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdContratacaoPNCP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Legislacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroDoCertame")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroDoProcesso")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Objeto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pregoeiro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RevisadoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ValorEstimadoGlobal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ValorNegociadoGlobal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dataAberturaProposta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dataEncerramentoProposta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dataPublicacaoPncp")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AtividadeId");

                    b.ToTable("RelatorioEstatistico", "AgendaConsulta");
                });

            modelBuilder.Entity("Domain.Entities.TipoEvento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titulo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipoEvento", "AgendaConsulta");
                });

            modelBuilder.Entity("Domain.Entities.UnidadeGestora", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sigla")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UnidadeGestora", "AgendaConsulta");
                });

            modelBuilder.Entity("Domain.Entities.Anexo", b =>
                {
                    b.HasOne("Domain.Entities.Atividade", "Atividade")
                        .WithMany("Anexos")
                        .HasForeignKey("AtividadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Atividade");
                });

            modelBuilder.Entity("Domain.Entities.Atividade", b =>
                {
                    b.HasOne("Domain.Entities.UnidadeGestora", "UnidadeGestora")
                        .WithMany()
                        .HasForeignKey("UnidadeGestoraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UnidadeGestora");
                });

            modelBuilder.Entity("Domain.Entities.Evento", b =>
                {
                    b.HasOne("Domain.Entities.Atividade", "Atividade")
                        .WithMany("Eventos")
                        .HasForeignKey("AtividadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.ProcessoAgenda", null)
                        .WithMany("Eventos")
                        .HasForeignKey("ProcessoAgendaId");

                    b.HasOne("Domain.Entities.TipoEvento", "TipoEvento")
                        .WithMany()
                        .HasForeignKey("TipoEventoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Atividade");

                    b.Navigation("TipoEvento");
                });

            modelBuilder.Entity("Domain.Entities.Itemsatacollections", b =>
                {
                    b.HasOne("Domain.Entities.RelatorioEstatistico", null)
                        .WithMany("ItemsCollection")
                        .HasForeignKey("RelatorioEstatisticoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Entities.Recurso", b =>
                {
                    b.HasOne("Domain.Entities.Itemsatacollections", null)
                        .WithMany("RecursosCollection")
                        .HasForeignKey("ItemsatacollectionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Entities.RelatorioEstatistico", b =>
                {
                    b.HasOne("Domain.Entities.Atividade", "Atividade")
                        .WithMany("RelatoriosEstatisticos")
                        .HasForeignKey("AtividadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Atividade");
                });

            modelBuilder.Entity("Domain.Entities.Atividade", b =>
                {
                    b.Navigation("Anexos");

                    b.Navigation("Eventos");

                    b.Navigation("RelatoriosEstatisticos");
                });

            modelBuilder.Entity("Domain.Entities.Itemsatacollections", b =>
                {
                    b.Navigation("RecursosCollection");
                });

            modelBuilder.Entity("Domain.Entities.ProcessoAgenda", b =>
                {
                    b.Navigation("Eventos");
                });

            modelBuilder.Entity("Domain.Entities.RelatorioEstatistico", b =>
                {
                    b.Navigation("ItemsCollection");
                });
#pragma warning restore 612, 618
        }
    }
}
